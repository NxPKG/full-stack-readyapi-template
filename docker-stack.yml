name: full-stack-readyapi-template
services:
  adminer:
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ADMINER_DESIGN: pepa-linha-dark
    image: adminer
    labels:
      traefik.constraint-label: traefik-public
      traefik.docker.network: traefik-public
      traefik.enable: "true"
      traefik.http.routers.readyapi-adminer-http.entrypoints: http
      traefik.http.routers.readyapi-adminer-http.middlewares: https-redirect
      traefik.http.routers.readyapi-adminer-http.rule: Host(`adminer.readyapi-project.example.com`)
      traefik.http.routers.readyapi-adminer-https.entrypoints: https
      traefik.http.routers.readyapi-adminer-https.rule: Host(`adminer.readyapi-project.example.com`)
      traefik.http.routers.readyapi-adminer-https.tls: "true"
      traefik.http.routers.readyapi-adminer-https.tls.certresolver: le
      traefik.http.services.readyapi-adminer.loadbalancer.server.port: "8080"
    networks:
      default: null
      traefik-public: null
    restart: always
  backend:
    build:
      context: /workspace/full-stack-readyapi-template/backend
      dockerfile: Dockerfile
      args:
        INSTALL_DEV: "false"
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      BACKEND_CORS_ORIGINS: http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.khulnasoft.com
      DOCKER_IMAGE_BACKEND: backend
      DOCKER_IMAGE_FRONTEND: frontend
      DOMAIN: readyapi-project.example.com
      EMAILS_FROM_EMAIL: info@example.com
      ENVIRONMENT: local
      FIRST_SUPERUSER: admin@example.com
      FIRST_SUPERUSER_PASSWORD: changethis
      POSTGRES_DB: app
      POSTGRES_PASSWORD: changethis
      POSTGRES_PORT: "5432"
      POSTGRES_SERVER: db
      POSTGRES_USER: postgres
      PROJECT_NAME: Full Stack ReadyAPI Project
      SECRET_KEY: changethis
      SENTRY_DSN: ""
      SMTP_HOST: ""
      SMTP_PASSWORD: ""
      SMTP_PORT: "587"
      SMTP_SSL: "False"
      SMTP_TLS: "True"
      SMTP_USER: ""
      STACK_NAME: full-stack-readyapi-project
    image: backend:0.7.0
    labels:
      traefik.constraint-label: traefik-public
      traefik.docker.network: traefik-public
      traefik.enable: "true"
      traefik.http.middlewares.readyapi-www-redirect.redirectregex.regex: ^http(s)?://www.(readyapi-project.example.com)/(.*)
      traefik.http.middlewares.readyapi-www-redirect.redirectregex.replacement: http$${1}://readyapi-project.example.com/$${3}
      traefik.http.routers.readyapi-backend-http.entrypoints: http
      traefik.http.routers.readyapi-backend-http.middlewares: https-redirect,readyapi-www-redirect
      traefik.http.routers.readyapi-backend-http.rule: (Host(`readyapi-project.example.com`) || Host(`www.readyapi-project.example.com`)) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))
      traefik.http.routers.readyapi-backend-https.entrypoints: https
      traefik.http.routers.readyapi-backend-https.middlewares: readyapi-www-redirect
      traefik.http.routers.readyapi-backend-https.rule: (Host(`readyapi-project.example.com`) || Host(`www.readyapi-project.example.com`)) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))
      traefik.http.routers.readyapi-backend-https.tls: "true"
      traefik.http.routers.readyapi-backend-https.tls.certresolver: le
      traefik.http.services.readyapi-backend.loadbalancer.server.port: "80"
    networks:
      default: null
      traefik-public: null
    platform: linux/amd64
    restart: always
  db:
    environment:
      BACKEND_CORS_ORIGINS: http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.khulnasoft.com
      DOCKER_IMAGE_BACKEND: backend
      DOCKER_IMAGE_FRONTEND: frontend
      DOMAIN: localhost
      EMAILS_FROM_EMAIL: info@example.com
      ENVIRONMENT: local
      FIRST_SUPERUSER: admin@example.com
      FIRST_SUPERUSER_PASSWORD: changethis
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: app
      POSTGRES_PASSWORD: changethis
      POSTGRES_PORT: "5432"
      POSTGRES_SERVER: localhost
      POSTGRES_USER: postgres
      PROJECT_NAME: Full Stack ReadyAPI Project
      SECRET_KEY: changethis
      SENTRY_DSN: ""
      SMTP_HOST: ""
      SMTP_PASSWORD: ""
      SMTP_PORT: "587"
      SMTP_SSL: "False"
      SMTP_TLS: "True"
      SMTP_USER: ""
      STACK_NAME: full-stack-readyapi-project
    image: postgres:12
    networks:
      default: null
    restart: always
    volumes:
      - type: volume
        source: app-db-data
        target: /var/lib/postgresql/data/pgdata
        volume: {}
  frontend:
    build:
      context: /workspace/full-stack-readyapi-template/frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
        VITE_API_URL: https://readyapi-project.example.com
    image: frontend:0.7.0
    labels:
      traefik.constraint-label: traefik-public
      traefik.docker.network: traefik-public
      traefik.enable: "true"
      traefik.http.routers.readyapi-frontend-http.entrypoints: http
      traefik.http.routers.readyapi-frontend-http.middlewares: https-redirect,readyapi-www-redirect
      traefik.http.routers.readyapi-frontend-http.rule: Host(`readyapi-project.example.com`) || Host(`www.readyapi-project.example.com`)
      traefik.http.routers.readyapi-frontend-https.entrypoints: https
      traefik.http.routers.readyapi-frontend-https.middlewares: readyapi-www-redirect
      traefik.http.routers.readyapi-frontend-https.rule: Host(`readyapi-project.example.com`) || Host(`www.readyapi-project.example.com`)
      traefik.http.routers.readyapi-frontend-https.tls: "true"
      traefik.http.routers.readyapi-frontend-https.tls.certresolver: le
      traefik.http.services.readyapi-frontend.loadbalancer.server.port: "80"
    networks:
      default: null
      traefik-public: null
    restart: always
networks:
  default:
    name: full-stack-readyapi-template_default
  traefik-public:
    name: traefik-public
    external: true
volumes:
  app-db-data:
    name: full-stack-readyapi-template_app-db-data
